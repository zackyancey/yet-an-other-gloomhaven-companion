!function(i){"use strict";const t=-2,e=-3,n=-5,a=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],r=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],_=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],l=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],d=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],o=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],s=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],f=15;function b(){let i,t,a,r,_,b;function u(i,t,l,d,o,s,u,x,w,c,h){let k,v,m,y,g,p,A,E,I,S,U,D,z,P,Z;S=0,g=l;do{a[i[t+S]]++,S++,g--}while(0!==g);if(a[0]==l)return u[0]=-1,x[0]=0,0;for(E=x[0],p=1;p<=f&&0===a[p];p++);for(A=p,E<p&&(E=p),g=f;0!==g&&0===a[g];g--);for(m=g,E>g&&(E=g),x[0]=E,P=1<<p;p<g;p++,P<<=1)if((P-=a[p])<0)return e;if((P-=a[g])<0)return e;for(a[g]+=P,b[1]=p=0,S=1,z=2;0!=--g;)b[z]=p+=a[S],z++,S++;g=0,S=0;do{0!==(p=i[t+S])&&(h[b[p]++]=g),S++}while(++g<l);for(l=b[m],b[0]=g=0,S=0,y=-1,D=-E,_[0]=0,U=0,Z=0;A<=m;A++)for(k=a[A];0!=k--;){for(;A>D+E;){if(y++,D+=E,Z=m-D,Z=Z>E?E:Z,(v=1<<(p=A-D))>k+1&&(v-=k+1,z=A,p<Z))for(;++p<Z&&!((v<<=1)<=a[++z]);)v-=a[z];if(Z=1<<p,c[0]+Z>1440)return e;_[y]=U=c[0],c[0]+=Z,0!==y?(b[y]=g,r[0]=p,r[1]=E,p=g>>>D-E,r[2]=U-_[y-1]-p,w.set(r,3*(_[y-1]+p))):u[0]=U}for(r[1]=A-D,S>=l?r[0]=192:h[S]<d?(r[0]=h[S]<256?0:96,r[2]=h[S++]):(r[0]=s[h[S]-d]+16+64,r[2]=o[h[S++]-d]),v=1<<A-D,p=g>>>D;p<Z;p+=v)w.set(r,3*(U+p));for(p=1<<A-1;0!=(g&p);p>>>=1)g^=p;for(g^=p,I=(1<<D)-1;(g&I)!=b[y];)y--,D-=E,I=(1<<D)-1}return 0!==P&&1!=m?n:0}function x(e){let n;for(i||(i=[],t=[],a=new Int32Array(16),r=[],_=new Int32Array(f),b=new Int32Array(16)),t.length<e&&(t=[]),n=0;n<e;n++)t[n]=0;for(n=0;n<16;n++)a[n]=0;for(n=0;n<3;n++)r[n]=0;_.set(a.subarray(0,f),0),b.set(a.subarray(0,16),0)}this.inflate_trees_bits=function(a,r,_,l,d){let o;return x(19),i[0]=0,o=u(a,0,19,19,null,null,_,r,l,i,t),o==e?d.msg="oversubscribed dynamic bit lengths tree":o!=n&&0!==r[0]||(d.msg="incomplete dynamic bit lengths tree",o=e),o},this.inflate_trees_dynamic=function(a,r,_,f,b,w,c,h,k){let v;return x(288),i[0]=0,v=u(_,0,a,257,l,d,w,f,h,i,t),0!=v||0===f[0]?(v==e?k.msg="oversubscribed literal/length tree":-4!=v&&(k.msg="incomplete literal/length tree",v=e),v):(x(288),v=u(_,a,r,0,o,s,c,b,h,i,t),0!=v||0===b[0]&&a>257?(v==e?k.msg="oversubscribed distance tree":v==n?(k.msg="incomplete distance tree",v=e):-4!=v&&(k.msg="empty distance tree with lengths",v=e),v):0)}}b.inflate_trees_fixed=function(i,t,e,n){return i[0]=9,t[0]=5,e[0]=r,n[0]=_,0};function u(){const i=this;let n,r,_,l,d=0,o=0,s=0,f=0,b=0,u=0,x=0,w=0,c=0,h=0;function k(i,t,n,r,_,l,d,o){let s,f,b,u,x,w,c,h,k,v,m,y,g,p,A,E;c=o.next_in_index,h=o.avail_in,x=d.bitb,w=d.bitk,k=d.write,v=k<d.read?d.read-k-1:d.end-k,m=a[i],y=a[t];do{for(;w<20;)h--,x|=(255&o.read_byte(c++))<<w,w+=8;if(s=x&m,f=n,b=r,E=3*(b+s),0!==(u=f[E]))for(;;){if(x>>=f[E+1],w-=f[E+1],0!=(16&u)){for(u&=15,g=f[E+2]+(x&a[u]),x>>=u,w-=u;w<15;)h--,x|=(255&o.read_byte(c++))<<w,w+=8;for(s=x&y,f=_,b=l,E=3*(b+s),u=f[E];;){if(x>>=f[E+1],w-=f[E+1],0!=(16&u)){for(u&=15;w<u;)h--,x|=(255&o.read_byte(c++))<<w,w+=8;if(p=f[E+2]+(x&a[u]),x>>=u,w-=u,v-=g,k>=p)A=k-p,k-A>0&&2>k-A?(d.window[k++]=d.window[A++],d.window[k++]=d.window[A++],g-=2):(d.window.set(d.window.subarray(A,A+2),k),k+=2,A+=2,g-=2);else{A=k-p;do{A+=d.end}while(A<0);if(u=d.end-A,g>u){if(g-=u,k-A>0&&u>k-A)do{d.window[k++]=d.window[A++]}while(0!=--u);else d.window.set(d.window.subarray(A,A+u),k),k+=u,A+=u,u=0;A=0}}if(k-A>0&&g>k-A)do{d.window[k++]=d.window[A++]}while(0!=--g);else d.window.set(d.window.subarray(A,A+g),k),k+=g,A+=g,g=0;break}if(0!=(64&u))return o.msg="invalid distance code",g=o.avail_in-h,g=w>>3<g?w>>3:g,h+=g,c-=g,w-=g<<3,d.bitb=x,d.bitk=w,o.avail_in=h,o.total_in+=c-o.next_in_index,o.next_in_index=c,d.write=k,e;s+=f[E+2],s+=x&a[u],E=3*(b+s),u=f[E]}break}if(0!=(64&u))return 0!=(32&u)?(g=o.avail_in-h,g=w>>3<g?w>>3:g,h+=g,c-=g,w-=g<<3,d.bitb=x,d.bitk=w,o.avail_in=h,o.total_in+=c-o.next_in_index,o.next_in_index=c,d.write=k,1):(o.msg="invalid literal/length code",g=o.avail_in-h,g=w>>3<g?w>>3:g,h+=g,c-=g,w-=g<<3,d.bitb=x,d.bitk=w,o.avail_in=h,o.total_in+=c-o.next_in_index,o.next_in_index=c,d.write=k,e);if(s+=f[E+2],s+=x&a[u],E=3*(b+s),0===(u=f[E])){x>>=f[E+1],w-=f[E+1],d.window[k++]=f[E+2],v--;break}}else x>>=f[E+1],w-=f[E+1],d.window[k++]=f[E+2],v--}while(v>=258&&h>=10);return g=o.avail_in-h,g=w>>3<g?w>>3:g,h+=g,c-=g,w-=g<<3,d.bitb=x,d.bitk=w,o.avail_in=h,o.total_in+=c-o.next_in_index,o.next_in_index=c,d.write=k,0}i.init=function(i,t,e,a,d,o){n=0,x=i,w=t,_=e,c=a,l=d,h=o,r=null},i.proc=function(i,v,m){let y,g,p,A,E,I,S,U=0,D=0,z=0;for(z=v.next_in_index,A=v.avail_in,U=i.bitb,D=i.bitk,E=i.write,I=E<i.read?i.read-E-1:i.end-E;;)switch(n){case 0:if(I>=258&&A>=10&&(i.bitb=U,i.bitk=D,v.avail_in=A,v.total_in+=z-v.next_in_index,v.next_in_index=z,i.write=E,m=k(x,w,_,c,l,h,i,v),z=v.next_in_index,A=v.avail_in,U=i.bitb,D=i.bitk,E=i.write,I=E<i.read?i.read-E-1:i.end-E,0!=m)){n=1==m?7:9;break}s=x,r=_,o=c,n=1;case 1:for(y=s;D<y;){if(0===A)return i.bitb=U,i.bitk=D,v.avail_in=A,v.total_in+=z-v.next_in_index,v.next_in_index=z,i.write=E,i.inflate_flush(v,m);m=0,A--,U|=(255&v.read_byte(z++))<<D,D+=8}if(g=3*(o+(U&a[y])),U>>>=r[g+1],D-=r[g+1],p=r[g],0===p){f=r[g+2],n=6;break}if(0!=(16&p)){b=15&p,d=r[g+2],n=2;break}if(0==(64&p)){s=p,o=g/3+r[g+2];break}if(0!=(32&p)){n=7;break}return n=9,v.msg="invalid literal/length code",m=e,i.bitb=U,i.bitk=D,v.avail_in=A,v.total_in+=z-v.next_in_index,v.next_in_index=z,i.write=E,i.inflate_flush(v,m);case 2:for(y=b;D<y;){if(0===A)return i.bitb=U,i.bitk=D,v.avail_in=A,v.total_in+=z-v.next_in_index,v.next_in_index=z,i.write=E,i.inflate_flush(v,m);m=0,A--,U|=(255&v.read_byte(z++))<<D,D+=8}d+=U&a[y],U>>=y,D-=y,s=w,r=l,o=h,n=3;case 3:for(y=s;D<y;){if(0===A)return i.bitb=U,i.bitk=D,v.avail_in=A,v.total_in+=z-v.next_in_index,v.next_in_index=z,i.write=E,i.inflate_flush(v,m);m=0,A--,U|=(255&v.read_byte(z++))<<D,D+=8}if(g=3*(o+(U&a[y])),U>>=r[g+1],D-=r[g+1],p=r[g],0!=(16&p)){b=15&p,u=r[g+2],n=4;break}if(0==(64&p)){s=p,o=g/3+r[g+2];break}return n=9,v.msg="invalid distance code",m=e,i.bitb=U,i.bitk=D,v.avail_in=A,v.total_in+=z-v.next_in_index,v.next_in_index=z,i.write=E,i.inflate_flush(v,m);case 4:for(y=b;D<y;){if(0===A)return i.bitb=U,i.bitk=D,v.avail_in=A,v.total_in+=z-v.next_in_index,v.next_in_index=z,i.write=E,i.inflate_flush(v,m);m=0,A--,U|=(255&v.read_byte(z++))<<D,D+=8}u+=U&a[y],U>>=y,D-=y,n=5;case 5:for(S=E-u;S<0;)S+=i.end;for(;0!==d;){if(0===I&&(E==i.end&&0!==i.read&&(E=0,I=E<i.read?i.read-E-1:i.end-E),0===I&&(i.write=E,m=i.inflate_flush(v,m),E=i.write,I=E<i.read?i.read-E-1:i.end-E,E==i.end&&0!==i.read&&(E=0,I=E<i.read?i.read-E-1:i.end-E),0===I)))return i.bitb=U,i.bitk=D,v.avail_in=A,v.total_in+=z-v.next_in_index,v.next_in_index=z,i.write=E,i.inflate_flush(v,m);i.window[E++]=i.window[S++],I--,S==i.end&&(S=0),d--}n=0;break;case 6:if(0===I&&(E==i.end&&0!==i.read&&(E=0,I=E<i.read?i.read-E-1:i.end-E),0===I&&(i.write=E,m=i.inflate_flush(v,m),E=i.write,I=E<i.read?i.read-E-1:i.end-E,E==i.end&&0!==i.read&&(E=0,I=E<i.read?i.read-E-1:i.end-E),0===I)))return i.bitb=U,i.bitk=D,v.avail_in=A,v.total_in+=z-v.next_in_index,v.next_in_index=z,i.write=E,i.inflate_flush(v,m);m=0,i.window[E++]=f,I--,n=0;break;case 7:if(D>7&&(D-=8,A++,z--),i.write=E,m=i.inflate_flush(v,m),E=i.write,I=E<i.read?i.read-E-1:i.end-E,i.read!=i.write)return i.bitb=U,i.bitk=D,v.avail_in=A,v.total_in+=z-v.next_in_index,v.next_in_index=z,i.write=E,i.inflate_flush(v,m);n=8;case 8:return m=1,i.bitb=U,i.bitk=D,v.avail_in=A,v.total_in+=z-v.next_in_index,v.next_in_index=z,i.write=E,i.inflate_flush(v,m);case 9:return m=e,i.bitb=U,i.bitk=D,v.avail_in=A,v.total_in+=z-v.next_in_index,v.next_in_index=z,i.write=E,i.inflate_flush(v,m);default:return m=t,i.bitb=U,i.bitk=D,v.avail_in=A,v.total_in+=z-v.next_in_index,v.next_in_index=z,i.write=E,i.inflate_flush(v,m)}},i.free=function(){}}const x=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];function w(i,r){const _=this;let l,d=0,o=0,s=0,f=0;const w=[0],c=[0],h=new u;let k=0,v=new Int32Array(4320);const m=new b;_.bitk=0,_.bitb=0,_.window=new Uint8Array(r),_.end=r,_.read=0,_.write=0,_.reset=function(i,t){t&&(t[0]=0),6==d&&h.free(i),d=0,_.bitk=0,_.bitb=0,_.read=_.write=0},_.reset(i,null),_.inflate_flush=function(i,t){let e,a,r;return a=i.next_out_index,r=_.read,e=(r<=_.write?_.write:_.end)-r,e>i.avail_out&&(e=i.avail_out),0!==e&&t==n&&(t=0),i.avail_out-=e,i.total_out+=e,i.next_out.set(_.window.subarray(r,r+e),a),a+=e,r+=e,r==_.end&&(r=0,_.write==_.end&&(_.write=0),e=_.write-r,e>i.avail_out&&(e=i.avail_out),0!==e&&t==n&&(t=0),i.avail_out-=e,i.total_out+=e,i.next_out.set(_.window.subarray(r,r+e),a),a+=e,r+=e),i.next_out_index=a,_.read=r,t},_.proc=function(i,n){let r,u,y,g,p,A,E,I;for(g=i.next_in_index,p=i.avail_in,u=_.bitb,y=_.bitk,A=_.write,E=A<_.read?_.read-A-1:_.end-A;;){let S,U,D,z,P,Z,j,q;switch(d){case 0:for(;y<3;){if(0===p)return _.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n);n=0,p--,u|=(255&i.read_byte(g++))<<y,y+=8}switch(r=7&u,k=1&r,r>>>1){case 0:u>>>=3,y-=3,r=7&y,u>>>=r,y-=r,d=1;break;case 1:S=[],U=[],D=[[]],z=[[]],b.inflate_trees_fixed(S,U,D,z),h.init(S[0],U[0],D[0],0,z[0],0),u>>>=3,y-=3,d=6;break;case 2:u>>>=3,y-=3,d=3;break;case 3:return u>>>=3,y-=3,d=9,i.msg="invalid block type",n=e,_.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n)}break;case 1:for(;y<32;){if(0===p)return _.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n);n=0,p--,u|=(255&i.read_byte(g++))<<y,y+=8}if((~u>>>16&65535)!=(65535&u))return d=9,i.msg="invalid stored block lengths",n=e,_.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n);o=65535&u,u=y=0,d=0!==o?2:0!==k?7:0;break;case 2:if(0===p)return _.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n);if(0===E&&(A==_.end&&0!==_.read&&(A=0,E=A<_.read?_.read-A-1:_.end-A),0===E&&(_.write=A,n=_.inflate_flush(i,n),A=_.write,E=A<_.read?_.read-A-1:_.end-A,A==_.end&&0!==_.read&&(A=0,E=A<_.read?_.read-A-1:_.end-A),0===E)))return _.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n);if(n=0,r=o,r>p&&(r=p),r>E&&(r=E),_.window.set(i.read_buf(g,r),A),g+=r,p-=r,A+=r,E-=r,0!=(o-=r))break;d=0!==k?7:0;break;case 3:for(;y<14;){if(0===p)return _.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n);n=0,p--,u|=(255&i.read_byte(g++))<<y,y+=8}if(s=r=16383&u,(31&r)>29||(r>>5&31)>29)return d=9,i.msg="too many length or distance symbols",n=e,_.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n);if(r=258+(31&r)+(r>>5&31),!l||l.length<r)l=[];else for(I=0;I<r;I++)l[I]=0;u>>>=14,y-=14,f=0,d=4;case 4:for(;f<4+(s>>>10);){for(;y<3;){if(0===p)return _.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n);n=0,p--,u|=(255&i.read_byte(g++))<<y,y+=8}l[x[f++]]=7&u,u>>>=3,y-=3}for(;f<19;)l[x[f++]]=0;if(w[0]=7,r=m.inflate_trees_bits(l,w,c,v,i),0!=r)return(n=r)==e&&(l=null,d=9),_.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n);f=0,d=5;case 5:for(;r=s,!(f>=258+(31&r)+(r>>5&31));){let t,o;for(r=w[0];y<r;){if(0===p)return _.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n);n=0,p--,u|=(255&i.read_byte(g++))<<y,y+=8}if(r=v[3*(c[0]+(u&a[r]))+1],o=v[3*(c[0]+(u&a[r]))+2],o<16)u>>>=r,y-=r,l[f++]=o;else{for(I=18==o?7:o-14,t=18==o?11:3;y<r+I;){if(0===p)return _.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n);n=0,p--,u|=(255&i.read_byte(g++))<<y,y+=8}if(u>>>=r,y-=r,t+=u&a[I],u>>>=I,y-=I,I=f,r=s,I+t>258+(31&r)+(r>>5&31)||16==o&&I<1)return l=null,d=9,i.msg="invalid bit length repeat",n=e,_.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n);o=16==o?l[I-1]:0;do{l[I++]=o}while(0!=--t);f=I}}if(c[0]=-1,P=[],Z=[],j=[],q=[],P[0]=9,Z[0]=6,r=s,r=m.inflate_trees_dynamic(257+(31&r),1+(r>>5&31),l,P,Z,j,q,v,i),0!=r)return r==e&&(l=null,d=9),n=r,_.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n);h.init(P[0],Z[0],v,j[0],v,q[0]),d=6;case 6:if(_.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,1!=(n=h.proc(_,i,n)))return _.inflate_flush(i,n);if(n=0,h.free(i),g=i.next_in_index,p=i.avail_in,u=_.bitb,y=_.bitk,A=_.write,E=A<_.read?_.read-A-1:_.end-A,0===k){d=0;break}d=7;case 7:if(_.write=A,n=_.inflate_flush(i,n),A=_.write,E=A<_.read?_.read-A-1:_.end-A,_.read!=_.write)return _.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n);d=8;case 8:return n=1,_.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n);case 9:return n=e,_.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n);default:return n=t,_.bitb=u,_.bitk=y,i.avail_in=p,i.total_in+=g-i.next_in_index,i.next_in_index=g,_.write=A,_.inflate_flush(i,n)}}},_.free=function(i){_.reset(i,null),_.window=null,v=null},_.set_dictionary=function(i,t,e){_.window.set(i.subarray(t,t+e),0),_.read=_.write=e},_.sync_point=function(){return 1==d?1:0}}const c=13,h=[0,0,255,255];function k(){const i=this;function a(i){return i&&i.istate?(i.total_in=i.total_out=0,i.msg=null,i.istate.mode=7,i.istate.blocks.reset(i,null),0):t}i.mode=0,i.method=0,i.was=[0],i.need=0,i.marker=0,i.wbits=0,i.inflateEnd=function(t){return i.blocks&&i.blocks.free(t),i.blocks=null,0},i.inflateInit=function(e,n){return e.msg=null,i.blocks=null,n<8||n>15?(i.inflateEnd(e),t):(i.wbits=n,e.istate.blocks=new w(e,1<<n),a(e),0)},i.inflate=function(i,a){let r,_;if(!i||!i.istate||!i.next_in)return t;for(a=4==a?n:0,r=n;;)switch(i.istate.mode){case 0:if(0===i.avail_in)return r;if(r=a,i.avail_in--,i.total_in++,8!=(15&(i.istate.method=i.read_byte(i.next_in_index++)))){i.istate.mode=c,i.msg="unknown compression method",i.istate.marker=5;break}if(8+(i.istate.method>>4)>i.istate.wbits){i.istate.mode=c,i.msg="invalid window size",i.istate.marker=5;break}i.istate.mode=1;case 1:if(0===i.avail_in)return r;if(r=a,i.avail_in--,i.total_in++,_=255&i.read_byte(i.next_in_index++),((i.istate.method<<8)+_)%31!=0){i.istate.mode=c,i.msg="incorrect header check",i.istate.marker=5;break}if(0==(32&_)){i.istate.mode=7;break}i.istate.mode=2;case 2:if(0===i.avail_in)return r;r=a,i.avail_in--,i.total_in++,i.istate.need=(255&i.read_byte(i.next_in_index++))<<24&4278190080,i.istate.mode=3;case 3:if(0===i.avail_in)return r;r=a,i.avail_in--,i.total_in++,i.istate.need+=(255&i.read_byte(i.next_in_index++))<<16&16711680,i.istate.mode=4;case 4:if(0===i.avail_in)return r;r=a,i.avail_in--,i.total_in++,i.istate.need+=(255&i.read_byte(i.next_in_index++))<<8&65280,i.istate.mode=5;case 5:return 0===i.avail_in?r:(r=a,i.avail_in--,i.total_in++,i.istate.need+=255&i.read_byte(i.next_in_index++),i.istate.mode=6,2);case 6:return i.istate.mode=c,i.msg="need dictionary",i.istate.marker=0,t;case 7:if(r=i.istate.blocks.proc(i,r),r==e){i.istate.mode=c,i.istate.marker=0;break}if(0==r&&(r=a),1!=r)return r;r=a,i.istate.blocks.reset(i,i.istate.was),i.istate.mode=12;case 12:return 1;case c:return e;default:return t}},i.inflateSetDictionary=function(i,e,n){let a=0,r=n;return i&&i.istate&&6==i.istate.mode?(r>=1<<i.istate.wbits&&(r=(1<<i.istate.wbits)-1,a=n-r),i.istate.blocks.set_dictionary(e,a,r),i.istate.mode=7,0):t},i.inflateSync=function(i){let r,_,l,d,o;if(!i||!i.istate)return t;if(i.istate.mode!=c&&(i.istate.mode=c,i.istate.marker=0),0===(r=i.avail_in))return n;for(_=i.next_in_index,l=i.istate.marker;0!==r&&l<4;)i.read_byte(_)==h[l]?l++:l=0!==i.read_byte(_)?0:4-l,_++,r--;return i.total_in+=_-i.next_in_index,i.next_in_index=_,i.avail_in=r,i.istate.marker=l,4!=l?e:(d=i.total_in,o=i.total_out,a(i),i.total_in=d,i.total_out=o,i.istate.mode=7,0)},i.inflateSyncPoint=function(i){return i&&i.istate&&i.istate.blocks?i.istate.blocks.sync_point():t}}function v(){}v.prototype={inflateInit:function(i){const t=this;return t.istate=new k,i||(i=15),t.istate.inflateInit(t,i)},inflate:function(i){const e=this;return e.istate?e.istate.inflate(e,i):t},inflateEnd:function(){const i=this;if(!i.istate)return t;const e=i.istate.inflateEnd(i);return i.istate=null,e},inflateSync:function(){const i=this;return i.istate?i.istate.inflateSync(i):t},inflateSetDictionary:function(i,e){const n=this;return n.istate?n.istate.inflateSetDictionary(n,i,e):t},read_byte:function(i){return this.next_in.subarray(i,i+1)[0]},read_buf:function(i,t){return this.next_in.subarray(i,i+t)}},i.ZipInflate=function(){const i=new v,t=new Uint8Array(512);let e=!1;i.inflateInit(),i.next_out=t,this.append=function(a,r){const _=[];let l,d,o=0,s=0,f=0;if(0!==a.length){i.next_in_index=0,i.next_in=a,i.avail_in=a.length;do{if(i.next_out_index=0,i.avail_out=512,0!==i.avail_in||e||(i.next_in_index=0,e=!0),l=i.inflate(0),e&&l===n){if(0!==i.avail_in)throw new Error("inflating: bad input")}else if(0!==l&&1!==l)throw new Error("inflating: "+i.msg);if((e||1===l)&&i.avail_in===a.length)throw new Error("inflating: bad input");i.next_out_index&&(512===i.next_out_index?_.push(new Uint8Array(t)):_.push(new Uint8Array(t.subarray(0,i.next_out_index)))),f+=i.next_out_index,r&&i.next_in_index>0&&i.next_in_index!=o&&(r(i.next_in_index),o=i.next_in_index)}while(i.avail_in>0||0===i.avail_out);return d=new Uint8Array(f),_.forEach((function(i){d.set(i,s),s+=i.length})),d}},this.flush=function(){i.inflateEnd()}}}(this);
